services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: wasplanning_postgres
    environment:
      POSTGRES_DB: wasplanning
      POSTGRES_USER: wasplanning
      POSTGRES_PASSWORD: wasplanning_dev
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wasplanning -d wasplanning"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - wasplanning

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: wasplanning_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - wasplanning

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: wasplanning_minio
    environment:
      MINIO_ROOT_USER: wasplanning
      MINIO_ROOT_PASSWORD: wasplanning_dev
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - wasplanning

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local

networks:
  wasplanning:
    driver: bridge